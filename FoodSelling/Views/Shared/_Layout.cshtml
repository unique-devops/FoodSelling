@{
    ViewData["Title"] = "Food Selling";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/FoodSelling.styles.css" asp-append-version="true" />
</head>
<body>   
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">FoodSelling</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>


                       @*  @if (TempData["UserId"] != null) *@
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Food" asp-action="Index">Food</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Order" asp-action="Index">Order</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="@Url.Action("Index", "Cart")">
                                    Cart:@await Component.InvokeAsync("Cart", new { userEmail = User.Identity.Name })
                                </a>
                            </li>
                            <li class="nav-item">
                                <span class="nav-link">Welcome, @TempData["Role"]</span>
                            </li>                           
                            <li class="nav-item">
                                <a class="nav-link" href="@Url.Action("Logout", "Account")">Logout</a>
                            </li>
                            <li class="nav-item">
                                <span class="nav-link">Hello, @User.Identity.Name!</span>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" href="@Url.Action("Login", "Account")">Login</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="@Url.Action("Register", "Account")">Register</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - FoodSelling - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>

    <!-- Login Modal -->
    <div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="loginForm">
                    <div class="modal-header">
                        <h5 class="modal-title" id="loginModalLabel">Login</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control" id="email" required />
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" class="form-control" id="password" required />
                        </div>                      
                        <div id="loginErrors" class="text-danger small"></div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Login</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <!-- Toast Container -->
   <div class="position-fixed top-0 end-0 p-3" style="z-index: 1055">
        <div id="dynamicToast" class="toast align-items-center text-white bg-primary border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body" id="toastMessage">
                    <!-- Message will go here -->
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>


    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.0/signalr.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/cartHub")
            .build();

        connection.start().catch(err => console.error(err.toString()));

        connection.on("ReceiveCartCount", function (cartCount) {
            document.getElementById("cart-count").textContent = cartCount;
        });

        //Toast Message 
         function showToast(message, bgClass = 'bg-primary') {
            const toastEl = document.getElementById('dynamicToast');
            const toastBody = document.getElementById('toastMessage');

            // Update the message and background
            toastBody.innerText = message;
            toastEl.className = `toast align-items-center text-white ${bgClass} border-0`;

            // Create and show the toast
            const bsToast = new bootstrap.Toast(toastEl);
            bsToast.show();
        }

        // Handle login form submit
        document.getElementById('loginForm').addEventListener('submit', function (e) {
                e.preventDefault();
                
                const email = document.getElementById('email').value;
                const password = document.getElementById('password').value;               
                fetch('/Account/Login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: `Email=${encodeURIComponent(email)}&Password=${encodeURIComponent(password)}`
                })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        // const loginModal = bootstrap.Modal.getInstance(document.getElementById('loginModal'));
                        // loginModal.hide();
                        showToast("Logged in successfully!", "bg-success");
                        location.reload(); // Reload the page to reflect logged-in status
                    } else {
                        document.getElementById('loginErrors').innerText = (data.errors || ["Login failed"]).join('\n');
                    }
                })
                .catch(err => console.error(err));
            });
         
    </script>  

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
